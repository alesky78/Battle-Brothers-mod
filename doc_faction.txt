#######################
How to create a Faction
and enable in the game
#######################


#############
main scripts:
#############
World.State 
	script --> scripts/states/world_state
	accessible by --> this.World.State
	defined in --> scripts/states/world_state function onInit()
	
FactionManager
	script --> scripts/factions/faction_manager
	accessible by  --> this.World.FactionManager
	defined in --> scripts/states/world_state function onInit()	
	
Config
	Factions 
		script --> scripts/config/factions
		define:
			gt.Const.FactionType --> table that contain name/id of a faction
			gt.Const.FactionBase --> array that contain the brust of the factions
			gt.Const.Faction -->  table that contain name/id of a faction
			gt.Const.FactionAlliance --> table that contain the alliance of a specific faction refernce by the id in the gt.Const.Faction
			
	FactionTrait			
		script --> scripts/config/faction_traits
		define:
			gt.Const.FactionTrait --> table contain 
									  for each factio a unique integer id 
									  an extra key called Action that is an array of array: 
											each element of this array is again an array that contains a slist of script names, are the script of the actions associated
											remember that the code use unique integer id of the faction to determine what is the i-element in the Action associated to the faction 

	Spawnlist_<faction>
		script --> scripts/config/spawnlist_<faction>
		define:
			gt.Const.World.Spawn.BanditRoamers 	 --> the composition of the group romaers
			gt.Const.World.Spawn.BanditDefenders --> the composition of the group defender
			gt.Const.World.Spawn.Bandit.....	 --> the composition of the group .......
			
	Spawnlist_master
		script --> scripts/config/spawnlist_master
		define:
			gt.Const.World.Spawn.Troops 	 	--> it is a table and inside define all the possible entity of the game
			gt.Const.World.Spawn.Caravan		
			gt.Const.World.Spawn.CaravanEscort

#############
the process:
#############
- 1) world_state.startNewCampaign() - Creation of all the game session obejct like the faction

the factions are created during the creation of the campaign by the script World.State using the function function startNewCampaign().

During this function the FactionManager is called requesting to create the new factions: 
- this.World.FactionManager.createFactions();
after the creation of the factions it call 
- this.World.FactionManager.uncoverSettlements(this.m.CampaignSettings.ExplorationMode);	--> just determine if the settlement created are dscovered or not by the player based on the starting spawn position
- this.World.FactionManager.runSimulation(); --> run simulation internally for each single faction call function.update(true, true); in an iteration of 2000 times


- 2) FactionManager.createFactions()

	prepare configuration for the new faction
	Factions  		--> see 4.1
	FactionTrait 	--> see 4.2 & 4.3 (do add action in the FactionTrait)

	this functions in order
	- create one by one all the factions --> see 4.4
	- create the settlement
	- create the noble house and add the settlement to the noble house	
	- add the trait to the faction 	   --> see 4.5
	- add the faction to the array of the FactionManager this.m.Factions.push(f); 
	- create all the relationsheep between the faction createAlliances();
	- for each faction created call the method onUpdateRoster(); --> create the character that are show in the roster that you can see in the UI page of the factions, 
																	 this is used only by noble house and settlement becouse this are the factions that you see in the page Factions
																	 
- 3) FactionManager.runSimulation()

	this function in order
	- create a variable for each factio exsist												
	- for each faction created call the function update(true, true) of the faction  --> see 4.6
	

#################
Details
#################


- 4.1) preconfigurare Factions scripts/config/factions
		
		gt.Const.FactionType --> this conatin all the possible this.m.Type of a single faction	
								in this table the there is a key COUNT then remember to add a new faction, solution:
								gt.Const.FactionType.MY_FACTION <- gt.Const.FactionType.len() - 2;
								gt.Const.FactionType.COUNT = gt.Const.FactionType.len(); -> for me better gt.Const.FactionType.COUNT = gt.Const.FactionType.COUNT + 1;								 
		
		gt.Const.FactionBase --> this contains all the possible this.m.TacticalBase of a single faction
								 defined has a string, but the Config Factions keep the array. For the noble house is bust_base_military, solution:
								 gt.Const.FactionBase.push("my_new_bush")								
								 
		gt.Const.Faction --> 	gt.Const.Faction.MY_FACTION <- gt.Const.FactionType.len() - 2;
								gt.Const.Faction.COUNT = gt.Const.Faction.len(); -> for me better gt.Const.Faction.COUNT = gt.Const.FactionType.COUNT + 1;	
								
		gt.Const.FactionAlliance  --> you need to link to the civilian and the noble house the friendship with the demon_slayer faction
									  and you need to make demon_slayer link with civilian and the noble house
									
									Local alliance = null;
									alliance = gt.Const.FactionAlliance[this.Const.Faction.Civilian];
									alliance.push(gt.Const.Faction.demon_slayer);
									alliance = gt.Const.FactionAlliance[this.Const.Faction.NobleHouse];
									alliance.push(gt.Const.Faction.demon_slayer);	
									
									Local demon_slayer_alliance = [this.Const.Faction.demon_slayer,this.Const.Faction.Civilian,this.Const.Faction.NobleHouse];
									gt.Const.FactionAlliance.push(alliance);	
		

								 
- 4.2) preconfigurare FactionTrait scripts/config/faction_traits
	
		here i have first to implement all the actions and then populate the keys and the actins, example:
		gt.Const.FactionTrait.MyTrait <- gt.Const.FactionTrait.len() - 1;
		gt.Const.FactionTrait.Actions.push([
			"scripts/factions/actions/build_xxx_camp_action",
			"scripts/factions/actions/send_xxx_ambushers_action",
			"scripts/factions/actions/send_xxx_roamers_action",
			"scripts/factions/actions/defend_xxx_action"
		]);
				
- 4.3) create an action
	
		there are different actions to study, i will list the most interesting for me
		
		4.3.1 - scripts/factions/actions/build_xxx_camp_action --> responsible to build the settlement
		
			- explanation
			this are very simple, and very similar one to the others you can find it in the scripts/factions/actions/build_xxx_camp_action
			for example build_barbarian_camp_action or build_bandit_camp_action
			important to know that this action determine the maximum amount of settlements possible. 
			Inside its implementation it will call this.World.spawnLocation("scripts/entity/world/locations/barbarian_shelter_location", tile.Coords);
			then you have to crete an entity location for the all the possible locations that you need
			in the end it add the banned is requested to the location
			
			- create the location entity
			this are contained under the path scripts/entity/world/locations/ 
			very interesting for my project is the noble_camp_location, but it is limited so integrate with the bandit for example
			
				ex: bandit_camp_location
				1)require to popolate the create() customizing the default values
			
				this.location.create();
				this.m.TypeID = "location.bandit_camp";
				this.m.LocationType = this.Const.World.LocationType.Lair; --> very important use the constand in Const.World.LocationType defined in the config/word_location don't use Settlement or Unique that has special purpose
				this.m.CombatLocation.Template[0] = "tactical.human_camp";	--> constant to copy from the others
				this.m.CombatLocation.Fortification = this.Const.Tactical.FortificationType.Palisade;	--> constant to copy from the others
				this.m.CombatLocation.CutDownTrees = true;
				this.m.IsDespawningDefenders = false;
				this.setDefenderSpawnList(this.Const.World.Spawn.BanditDefenders);	--> define a completelly new constant with the spaws list of your faction see below how define the new constant
				this.m.Resources = 180;
				this.m.NamedShieldsList = this.Const.Items.NamedBanditShields; -->
				
				you need to define two new constant config
				spawnlist_<faction> --> where faction is the name of your factions the example are in the script/config/spawnlist_<faction_name>
				spawnlist_master --> this is a unique constant class that contain all the entity defined in the spawnlist_<faction> so probably is better to create a new master in case you need it
				
				2)require to popolate the onInit()customizing the default values
				
				normally here it is used just to determine the aspect/icon of the camp to show in the word map
				put attention to the noble_camp_location and the decisive_battle_contract that determine same interensting parameters like
				this.Warcamp.setDiscovered(true);
				this.World.uncoverFogOfWar(Warcamp.getTile().Pos, 500.0);
				


- 4.4) create a single factions
	all the faction inherit from the script scripts/factions/faction
	redefine the method create() to overwrite alle the variables customizing it
	
	//the most important parametere are this 2
	this.m.Type =  this.Const.FactionType.NobleHouse; 		--> add the constant defined in gt.Const.FactionType
	this.m.TacticalBase = "bust_base_military";				--> add the value configured in gt.Const.FactionBase, noble house are "bust_base_military"
	
	this.m.Base = "world_base_09";							--> the sprite to use for the base	world_base_09 os noble house
	this.m.CombatMusic = this.Const.Music.NobleTracks;		--> music in case of fight with this faction
	this.m.Footprints = this.Const.GenericFootprints;		--> human footprint this.Const.World.FootprintsType.Nobles??? controlla
	this.m.PlayerRelation = 0.0;							--> 0 mean enemy with the player
	//show in the UI faction menu
	this.m.IsHiddenIfNeutral = false
	this.m.IsHidden = true
	this.m.IsRelationDecaying = false;	
	
	see the implementation of the noble_faction and FactionManager.createNobleHouses() to add extra info like:
		banner,
		Traits,
		Roster wiht person that manage the house
	
- 4.5) add the trait to the faction
		
	add same other extra info but the most important is the trait defined in the FactionTrait
	and then push all the faction in the array of the factions: this.m.Factions.push(f); 
	
	example:
	function createBandits()
	{
		local f = this.new("scripts/factions/bandit_faction");
		f.setID(this.m.Factions.len());
		f.setName("Bandits");
		f.setDiscovered(true);
		f.addTrait(this.Const.FactionTrait.Bandit);	//add the trait
		this.m.Factions.push(f);
	}
	
	very interesting, when you call addTrait(), internally it create all the actions instances and add to the internal variables m.Deck = []

- 4.6) run the simulation of the faction

	runSimulation() function has a static approach like this:
	local barbarians = this.Const.DLC.Wildmen ? this.getFactionOfType(this.Const.FactionType.Barbarians) : null;
	
	then if you add a new faction it will not identify it
	later it will call update 2000 times, the update will activate the action and create a starting scenario 	
	
	the solution is this:

	::mods_hookNewObjectOnce("factions/faction_manager", function (o)
	{
		local runSimulation = o.runSimulation;		
		o.runSimulation = function()
		{	
			runSimulation()
			local MyFaction = this.getFactionOfType(this.Const.FactionType.MyFaction);
			for( local i = 0; i < this.Const.Factions.CyclesOnNewCampaign; i = ++i )
			{
				MyFaction.update(true, true);
			}
		}		
	})	





